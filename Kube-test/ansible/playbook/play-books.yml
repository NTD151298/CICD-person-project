- name: Install Common for master-node and worker node
  hosts: control_plane
  gather_facts: true
  become: true
  tasks:
    - name: Setting common configuration for all nodes
      shell: |
        cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
        br_netfilter
        EOF

        cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
        net.bridge.bridge-nf-call-ip6tables = 1
        net.bridge.bridge-nf-call-iptables = 1
        EOF

        sudo sysctl --system

    - name: Install Container Engine
      shell: |
        sudo apt-get update
        sudo apt-get install -y ca-certificates curl gnupg lsb-release
        curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

        sudo apt-get install docker.io docker-compose -y
        systemctl enable docker.service
        systemctl start docker.service

        cat <<EOF | sudo tee /etc/docker/daemon.json
        {
          "exec-opts": ["native.cgroupdriver=systemd"],
          "log-driver": "json-file",
          "log-opts": {
            "max-size": "100m"
          },
          "storage-driver": "overlay2"
        }
        EOF
        sudo systemctl enable docker
        sudo systemctl daemon-reload
        sudo systemctl restart docker

    - name: Install Kubeadm, Kubectl, Kubelet
      shell: |
        sudo apt-get update
        sudo apt-get install -y apt-transport-https ca-certificates curl

        mkdir -p /etc/apt/keyrings

        curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-archive-keyring.gpg

        echo "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list

        sudo apt-get update

        sudo apt-mark unhold kubelet kubeadm kubectl

        sudo apt-get install -y kubelet=1.27.0-00 kubeadm=1.27.0-00 kubectl=1.27.0-00

        sudo apt-mark hold kubelet kubeadm kubectl

    - name: Copy file test init.sh to Install controlplane components
      template:
        src: /home/a123/CICD-person-project/Kube-test/init.sh
        dest: /home/ubuntu/init.sh
- name: Install controlplane components
  hosts: control_plane
  gather_facts: true
  become: true
  tasks:
    - name: Install controlplane components
      shell: |
        CONTROLPLANE_PRIVATE_IP=$(hostname -I | awk '{print $1}')
        sudo kubeadm init --apiserver-cert-extra-sans=controlplane --apiserver-advertise-address=$CONTROLPLANE_PRIVATE_IP --pod-network-cidr=192.168.0.0/16
        sudo mkdir -p $HOME/.kube
        sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
        sudo chown $(id -u):$(id -g) $HOME/.kube/config
#
#        sudo kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.26.1/manifests/calico.yaml
#
#        sudo kubectl taint nodes --all node-role.kubernetes.io/control-plane-
